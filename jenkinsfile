pipeline {
    agent any
    
    environment {
        // AWS region and ECR repository details
        AWS_REGION = 'eu-north-1'  // Change to your AWS region
        ECR_REPOSITORY = 'my-ecr-repository'  // Replace with your ECR repository name
        AWS_ACCOUNT_ID = '676206908022'  // Replace with your AWS account ID
        ECR_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}"  // Construct the ECR URI
        IMAGE_TAG = "latest"  // You can customize this with dynamic versioning
        DOCKERFILE_DIR = 'frontend'  // Specify the folder containing the Dockerfile
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code (from GitHub, Bitbucket, etc.)
                git branch: 'backend', url: 'https://github.com/mai-efat/project-nti.git'
            }
        }
        
        stage('Login to ECR') {
            steps {
                script {
                    // Log in to Amazon ECR using the AWS CLI
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) { 
                        sh '''
                        aws sts get-caller-identity --region ${AWS_REGION}  # Confirm AWS credentials
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                        '''
                    }
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile in the 'docker' folder
                    sh '''
                    docker ps
                    docker build -t ${ECR_URI}:${env.BUILD_ID} -f ${DOCKERFILE_DIR}/Dockerfile .
                    '''
                }
            }
        }
        
        stage('Push to ECR') {
            steps {
                script {
                    // Push the Docker image to the ECR repository
                    sh '''
                    docker push ${ECR_URI}:${IMAGE_TAG}
                    '''
                }
            }
        }
    }
    
    post {
        success {
            cleanWs() 
        }
        failure {
            cleanWs() 
        }
    }
}
